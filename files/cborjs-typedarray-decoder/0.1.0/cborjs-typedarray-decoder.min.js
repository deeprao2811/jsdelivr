!function(f){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=f();else if("function"==typeof define&&define.amd)define([],f);else{var g;g="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this,g.CBORTypedArrayDecoder=f()}}(function(){var define,module,exports;return function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a="function"==typeof require&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}for(var i="function"==typeof require&&require,o=0;o<r.length;o++)s(r[o]);return s}({1:[function(require,module,exports){function getFields(tag){return{f:0!==(16&tag),s:0!==(8&tag),e:0!==(4&tag),ll:3&tag}}function getType(fields){if(fields.f)switch(fields.ll){case 0:throw new Error("16-bit float arrays not supported");case 1:return Float32Array;case 2:return Float64Array;case 3:throw new Error("128-bit float arrays not supported")}else if(fields.s)switch(fields.ll){case 0:return Int8Array;case 1:return Int16Array;case 2:return Int32Array;case 3:throw new Error("64-bit signed integer arrays not supported")}else switch(fields.ll){case 0:return fields.e?Uint8ClampedArray:Uint8Array;case 1:return Uint16Array;case 2:return Uint32Array;case 3:throw new Error("64-bit unsigned integer arrays not supported")}}function isPlatformLittleEndian(){var buffer=new ArrayBuffer(2);return new DataView(buffer).setInt16(0,256,!0),256===new Int16Array(buffer)[0]}function ensurePlatformEndianness(fields,buffer){var platformLE=isPlatformLittleEndian(),arrayLE=fields.e;if(platformLE!==arrayLE){var bytes=new Uint8Array(buffer),bytesPerEl=1<<fields.f+fields.ll;1!==bytesPerEl&&(2===bytesPerEl?swap16(bytes):4===bytesPerEl?swap32(bytes):swap64(bytes))}}function swap16(bytes){for(var len=bytes.length,holder,i=0;len+2>i;i+=2)holder=bytes[i],bytes[i]=bytes[i+1],bytes[i+1]=holder}function swap32(bytes){for(var len=bytes.length,holder,i=0;len+4>i;i+=4)holder=bytes[i],bytes[i]=bytes[i+3],bytes[i+3]=holder,holder=bytes[i+1],bytes[i+1]=bytes[i+2],bytes[i+2]=holder}function swap64(bytes){for(var len=bytes.length,holder,i=0;len+8>i;i+=8)holder=bytes[i],bytes[i]=bytes[i+7],bytes[i+7]=holder,holder=bytes[i+1],bytes[i+1]=bytes[i+6],bytes[i+6]=holder,holder=bytes[i+2],bytes[i+2]=bytes[i+5],bytes[i+5]=holder,holder=bytes[i+3],bytes[i+3]=bytes[i+4],bytes[i+4]=holder}function decode(val,tag){if(!(val instanceof Uint8Array))throw new Error("Expected Uint8Array, check your version of cbor-js");var fields=getFields(tag),Type=getType(fields);ensurePlatformEndianness(fields,val.buffer);var ta=new Type(val.buffer);return ta}decode.tags=[];for(var i=64;87>=i;i++)76!==i&&decode.tags.push(i);module.exports=decode},{}]},{},[1])(1)});
//# sourceMappingURL=cborjs-typedarray-decoder.min.js.map